name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          - name: Run tests
          env:
            # Using organization level secrets
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
            GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    
      - name: Run tests with coverage
        id: run-tests
        continue-on-error: true
        run: |
          # Run tests and save output
          pytest --cov=psycore tests/ -v > pytest_output.txt 2>&1 || true
          
          # Generate coverage report
          coverage report > coverage_report.txt
          
          # Save outputs as step outputs
          echo "test_output=$(cat pytest_output.txt)" >> $GITHUB_OUTPUT
          echo "coverage_report=$(cat coverage_report.txt)" >> $GITHUB_OUTPUT

      - name: Make script executable
        run: chmod +x .github/scripts/send-test-results.sh

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          ./.github/scripts/send-test-results.sh \
            "${{ steps.run-tests.outputs.test_output }}" \
            "${{ steps.run-tests.outputs.coverage_report }}" \
            "$GITHUB_REPOSITORY" \
            "${{ github.run_id }}"
          
      - name: Check test status
        if: steps.run-tests.outcome != 'success'
        run: exit 1